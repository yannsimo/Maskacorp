# Generated by Django 5.2.4 on 2025-07-13 16:44

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Artist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("stage_name", models.CharField(max_length=100)),
                ("bio", models.TextField()),
                ("profile_image", models.ImageField(upload_to="artist/profiles/")),
                ("slogan", models.CharField(max_length=200)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="ContactMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("email", models.EmailField(max_length=254)),
                (
                    "message_type",
                    models.CharField(
                        choices=[
                            ("booking", "Booking"),
                            ("collaboration", "Collaboration"),
                            ("media", "Média"),
                            ("other", "Autre"),
                        ],
                        max_length=20,
                    ),
                ),
                ("subject", models.CharField(max_length=200)),
                ("message", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_read", models.BooleanField(default=False)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SiteSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "site_title",
                    models.CharField(default="Kesh - Rap au Taff", max_length=100),
                ),
                ("meta_description", models.TextField(max_length=160)),
                ("primary_color", models.CharField(default="#e50000", max_length=7)),
                ("secondary_color", models.CharField(default="#ff6b00", max_length=7)),
                ("contact_email", models.EmailField(max_length=254)),
                ("analytics_code", models.TextField(blank=True)),
            ],
            options={
                "verbose_name": "Paramètres du site",
                "verbose_name_plural": "Paramètres du site",
            },
        ),
        migrations.CreateModel(
            name="AudioContent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                (
                    "audio_type",
                    models.CharField(
                        choices=[
                            ("freestyle", "Freestyle"),
                            ("single", "Single"),
                            ("extract", "Extrait"),
                            ("demo", "Démo"),
                            ("remix", "Remix"),
                            ("feat", "Featuring"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                (
                    "audio_file",
                    models.FileField(
                        upload_to="audio/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["mp3", "wav", "flac", "m4a"]
                            )
                        ],
                    ),
                ),
                (
                    "cover_image",
                    models.ImageField(blank=True, upload_to="audio/covers/"),
                ),
                ("duration", models.CharField(blank=True, max_length=10)),
                ("bpm", models.IntegerField(blank=True, null=True)),
                ("genre", models.CharField(blank=True, max_length=50)),
                ("spotify_url", models.URLField(blank=True)),
                ("apple_music_url", models.URLField(blank=True)),
                ("youtube_url", models.URLField(blank=True)),
                ("soundcloud_url", models.URLField(blank=True)),
                ("plays_count", models.IntegerField(default=0)),
                ("downloads_count", models.IntegerField(default=0)),
                ("is_featured", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("order", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "published_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "artist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="audio_contents",
                        to="music_app.artist",
                    ),
                ),
            ],
            options={
                "verbose_name": "Contenu audio",
                "verbose_name_plural": "Contenus audio",
                "ordering": ["-published_at", "order"],
            },
        ),
        migrations.CreateModel(
            name="MusicPlatform",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "platform",
                    models.CharField(
                        choices=[
                            ("spotify", "Spotify"),
                            ("apple_music", "Apple Music"),
                            ("deezer", "Deezer"),
                            ("soundcloud", "SoundCloud"),
                            ("youtube_music", "YouTube Music"),
                        ],
                        max_length=20,
                    ),
                ),
                ("url", models.URLField()),
                ("icon", models.CharField(max_length=50)),
                ("is_active", models.BooleanField(default=True)),
                ("order", models.IntegerField(default=0)),
                (
                    "artist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="music_platforms",
                        to="music_app.artist",
                    ),
                ),
            ],
            options={
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="Playlist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                (
                    "cover_image",
                    models.ImageField(blank=True, upload_to="playlists/covers/"),
                ),
                ("is_featured", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "artist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="playlists",
                        to="music_app.artist",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PlaylistItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.IntegerField(default=0)),
                (
                    "audio_content",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="music_app.audiocontent",
                    ),
                ),
                (
                    "playlist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="music_app.playlist",
                    ),
                ),
            ],
            options={
                "ordering": ["order"],
                "unique_together": {("playlist", "audio_content")},
            },
        ),
        migrations.AddField(
            model_name="playlist",
            name="audio_contents",
            field=models.ManyToManyField(
                through="music_app.PlaylistItem", to="music_app.audiocontent"
            ),
        ),
        migrations.CreateModel(
            name="Release",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                (
                    "release_type",
                    models.CharField(
                        choices=[
                            ("single", "Single"),
                            ("album", "Album"),
                            ("ep", "EP"),
                            ("mixtape", "Mixtape"),
                        ],
                        max_length=20,
                    ),
                ),
                ("cover_image", models.ImageField(upload_to="releases/covers/")),
                ("release_date", models.DateField()),
                ("description", models.TextField(blank=True)),
                ("is_featured", models.BooleanField(default=False)),
                ("spotify_url", models.URLField(blank=True)),
                ("apple_music_url", models.URLField(blank=True)),
                ("youtube_url", models.URLField(blank=True)),
                (
                    "artist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="releases",
                        to="music_app.artist",
                    ),
                ),
                (
                    "audio_contents",
                    models.ManyToManyField(blank=True, to="music_app.audiocontent"),
                ),
            ],
            options={
                "ordering": ["-release_date"],
            },
        ),
        migrations.CreateModel(
            name="SocialLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "platform",
                    models.CharField(
                        choices=[
                            ("tiktok", "TikTok"),
                            ("instagram", "Instagram"),
                            ("youtube", "YouTube"),
                            ("facebook", "Facebook"),
                            ("snapchat", "Snapchat"),
                            ("twitter", "Twitter/X"),
                        ],
                        max_length=20,
                    ),
                ),
                ("url", models.URLField()),
                ("icon", models.CharField(max_length=50)),
                ("is_active", models.BooleanField(default=True)),
                ("order", models.IntegerField(default=0)),
                (
                    "artist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="social_links",
                        to="music_app.artist",
                    ),
                ),
            ],
            options={
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="ViralVideo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "platform",
                    models.CharField(
                        choices=[
                            ("tiktok", "TikTok"),
                            ("instagram", "Instagram"),
                            ("youtube", "YouTube"),
                            ("snapchat", "Snapchat"),
                            ("facebook", "Facebook"),
                            ("twitter", "Twitter/X"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "video_file",
                    models.FileField(
                        blank=True,
                        upload_to="videos/viral/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["mp4", "mov", "avi", "webm"]
                            )
                        ],
                    ),
                ),
                ("video_url", models.URLField(blank=True)),
                (
                    "thumbnail",
                    models.ImageField(blank=True, upload_to="videos/thumbnails/"),
                ),
                ("views_count", models.IntegerField(default=0)),
                ("likes_count", models.IntegerField(default=0)),
                ("shares_count", models.IntegerField(default=0)),
                ("comments_count", models.IntegerField(default=0)),
                ("hashtags", models.CharField(blank=True, max_length=200)),
                ("is_featured", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("order", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "published_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "artist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="viral_videos",
                        to="music_app.artist",
                    ),
                ),
            ],
            options={
                "verbose_name": "Vidéo virale",
                "verbose_name_plural": "Vidéos virales",
                "ordering": ["-published_at", "order"],
            },
        ),
        migrations.CreateModel(
            name="VideoComment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("author_name", models.CharField(max_length=100)),
                (
                    "author_avatar",
                    models.ImageField(blank=True, upload_to="comments/avatars/"),
                ),
                ("comment_text", models.TextField()),
                ("platform", models.CharField(max_length=20)),
                ("original_url", models.URLField(blank=True)),
                ("likes_count", models.IntegerField(default=0)),
                ("is_highlighted", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "viral_video",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="music_app.viralvideo",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Challenge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("hashtag", models.CharField(max_length=50)),
                ("description", models.TextField()),
                ("video_url", models.URLField(blank=True)),
                ("tiktok_url", models.URLField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "viral_videos",
                    models.ManyToManyField(blank=True, to="music_app.viralvideo"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BuzzContent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content_type",
                    models.CharField(
                        choices=[
                            ("comment", "Commentaire"),
                            ("video", "Vidéo"),
                            ("audio", "Audio"),
                            ("stat", "Statistique"),
                            ("testimonial", "Témoignage"),
                            ("reaction", "Réaction"),
                            ("media", "Média"),
                        ],
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("content", models.TextField()),
                ("image", models.ImageField(blank=True, upload_to="buzz/")),
                ("video_url", models.URLField(blank=True)),
                (
                    "audio_file",
                    models.FileField(
                        blank=True,
                        upload_to="buzz/audio/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["mp3", "wav", "m4a"]
                            )
                        ],
                    ),
                ),
                ("source", models.CharField(blank=True, max_length=100)),
                ("source_url", models.URLField(blank=True)),
                ("engagement_count", models.IntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("order", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "artist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="buzz_content",
                        to="music_app.artist",
                    ),
                ),
                (
                    "related_audio",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="music_app.audiocontent",
                    ),
                ),
                (
                    "related_viral_video",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="music_app.viralvideo",
                    ),
                ),
            ],
            options={
                "verbose_name": "Contenu buzz",
                "verbose_name_plural": "Contenus buzz",
                "ordering": ["order", "-created_at"],
            },
        ),
    ]
